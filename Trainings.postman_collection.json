{
	"info": {
		"_postman_id": "06d9ee37-260b-4d32-886b-df6fa7e53038",
		"name": "Trainings",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8525892"
	},
	"item": [
		{
			"name": "All trainings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"A name is returned\", () => {",
							"    pm.expect(pm.response.json()).to.have.property('name');",
							"    pm.expect(pm.response.json().name).to.be.a('string');",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/all",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"all"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": []
		},
		{
			"name": "User trainings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"A name is returned\", () => {",
							"    pm.expect(pm.response.json()).to.have.property('name');",
							"    pm.expect(pm.response.json().name).to.be.a('string');",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/user/all?idUser=2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"all"
					],
					"query": [
						{
							"key": "idUser",
							"value": "2"
						}
					]
				},
				"description": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned."
			},
			"response": []
		},
		{
			"name": "User trainings by activity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/all?idUser=1&activityType=RUNNING",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"all"
					],
					"query": [
						{
							"key": "idUser",
							"value": "1"
						},
						{
							"key": "activityType",
							"value": "RUNNING"
						}
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "User done trainings before date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/all?idUser=1&endTime=2024-01-19 09:30:01",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"all"
					],
					"query": [
						{
							"key": "idUser",
							"value": "1"
						},
						{
							"key": "endTime",
							"value": "2024-01-19 09:30:01"
						}
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "Create training",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK status\", () => {",
							"    pm.response.to.have.status(200)",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"user\": {\n        \"id\": 5\n    },\n    \"startTime\": \"2024-01-19T07:00:00.000+00:00\",\n    \"endTime\": \"2024-01-19T08:30:00.000+00:00\",\n    \"activityType\": \"CYCLING\",\n    \"distance\": 15,\n    \"averageSpeed\": 15\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}",
					"host": [
						"{{baseUrl}}"
					]
				},
				"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
			},
			"response": []
		},
		{
			"name": "Update training",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": 1,\r\n        \"activityType\": \"RUNNING\",\r\n        \"distance\": 15,\r\n        \"averageSpeed\": 8.2\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"update"
					]
				}
			},
			"response": []
		}
	]
}